#!/usr/bin/env node
'use strict';

var _lodash = require('lodash');

var _getLogger = require('../get-logger');

var _getLogger2 = _interopRequireDefault(_getLogger);

var _index = require('../index');

var _index2 = _interopRequireDefault(_index);

var _parser = require('../bin-utils/parser');

var _parser2 = _interopRequireDefault(_parser);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FAIL_CODE = 1;

var _ref = (0, _parser2.default)(process.argv.slice(2)) || {},
    argv = _ref.argv,
    psConfig = _ref.psConfig;

if (argv && psConfig) {
  (0, _index2.default)({
    scriptConfig: psConfig.scripts,
    scripts: argv._,
    options: (0, _lodash.merge)(psConfig.options, {
      silent: argv.silent,
      logLevel: argv.logLevel,
      scripts: argv.scripts
    })
  }).then(function () {
    // make this explicit
    // because sometimes we can't explain
    // everything about life that confuses us...
    process.exitCode = 0;
  }, function (error) {
    var logLevel = (0, _getLogger.getLogLevel)({
      silent: argv.silent,
      logLevel: argv.logLevel,
      scripts: argv.scripts
    });
    var log = (0, _getLogger2.default)(logLevel);
    log.error(error);
    process.exitCode = error.code || FAIL_CODE;
  });
}