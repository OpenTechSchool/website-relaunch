'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _lodash = require('lodash');

var _prefixMatches3 = require('prefix-matches');

var _prefixMatches4 = _interopRequireDefault(_prefixMatches3);

var _resolveScriptObjectToString = require('./resolve-script-object-to-string');

var _resolveScriptObjectToString2 = _interopRequireDefault(_resolveScriptObjectToString);

var _kebabAndCamelCasify = require('./kebab-and-camel-casify');

var _kebabAndCamelCasify2 = _interopRequireDefault(_kebabAndCamelCasify);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = getScriptToRun;


function getScriptToRun(config, input) {
  config = (0, _kebabAndCamelCasify2.default)(config);
  // remove the default objects/strings so we cancheck
  // if the prefix works with another script first
  var defaultlessConfig = removeDefaults((0, _lodash.cloneDeep)(config));
  var scriptToRun = getScript(defaultlessConfig, input);
  if (!(0, _lodash.isUndefined)(scriptToRun) && (0, _lodash.isString)(scriptToRun.script)) {
    return scriptToRun;
  } else {
    // fallback to the defaults if no other script was
    // found with the given input
    return getScript(config, input);
  }
}

function getScript(config, input) {
  var _prefixMatches = (0, _prefixMatches4.default)(input, config),
      _prefixMatches2 = _slicedToArray(_prefixMatches, 1),
      script = _prefixMatches2[0];

  if (script) {
    var scriptName = Object.keys(script).shift();
    var scriptToRun = script[scriptName];
    if (scriptName && (0, _lodash.isPlainObject)(scriptToRun)) {
      scriptToRun = (0, _resolveScriptObjectToString2.default)(scriptToRun);
    }
    return {
      scriptName,
      script: scriptToRun
    };
  }
  return undefined;
}

function removeDefaults(object) {
  (0, _lodash.each)(object, function (value, key) {
    if (key === 'default') {
      delete object[key];
    } else if ((0, _lodash.isPlainObject)(value)) {
      object[key] = removeDefaults(value);
    }
  });
  return object;
}